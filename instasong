#!/usr/bin/python

import os
import glob
from bs4 import BeautifulSoup
from subprocess import check_output

# Version compatiblity
import sys
if (sys.version_info > (3,0)):
	from urllib.request import urlopen
	from urllib.parse import quote_plus as qp
	raw_input = input
else:
	from urllib2 import urlopen
	from urllib import quote_plus as qp

search = ''
# We do not want to accept empty inputs :)
while search == '':
  search = raw_input('Enter song name/lyrics/artist:  ')
search = qp(search)

print('Making DB Query')

# Magic happens here.
response = urlopen('https://www.youtube.com/results?search_query=' + search)
html = response.read()
soup = BeautifulSoup(html, 'html.parser')
song_dict = {}
i=1
for link in soup.find_all('a'):
    if '/watch?v=' in link.get('href'):
        # May change when Youtube gets updated in the future.
        if link.has_attr('aria-describedby'):
            title = link.get('title')
	    print(str(i) + ") " + title)
    	    song_dict[str(i)]=link.get('href')
            i = i+1

num = raw_input("Select The  Option You Want To Download: ")
if song_dict.has_key(num) != True:
    print("Invalid Option")
    sys.exit()

video_link = song_dict[num]
prompt = raw_input("Enter 'v' for video,'q' to exit and any other key for audio: ")

if prompt == 'q':
    sys.exit()

# Links are relative on page, making them absolute.
video_link = 'http://www.youtube.com/' + video_link
if prompt=='v':
    output = check_output("youtube-dl -F " + video_link + " | sort -b -r -k3 -n | grep best |  tail -1 | cut -d' ' -f1", shell=True).strip()   
    command = 'youtube-dl -f ' + str(output) + ' ' +video_link
else:
    command = 'youtube-dl --extract-audio --audio-format mp3 --audio-quality 0 ' + video_link

# Youtube-dl is a proof that god exists.
print ('Downloading...')
os.system(command)
